


		Escape Character

		Because strings must be written within quotes, JavaScript will misunderstand this string:
		let text = "We are the so-called "Vikings" from the north.";

		The string will be chopped to "We are the so-called ".

		The solution to avoid this problem, is to use the backslash escape character.

		The backslash (\) escape character turns special characters into string characters:
		Code 	Result 	Description
		\' 	' 	Single quote
		\" 	" 	Double quote
		\\ 	\ 	Backslash\


		The sequence \"  inserts a double quote in a string:

		Example
		let text = "We are the so-called \"Vikings\" from the north."; 


		Six other escape sequences are valid in JavaScript:
		Code 	Result
		\b 	Backspace
		\f 	Form Feed
		\n 	New Line
		\r 	Carriage Return
		\t 	Horizontal Tabulator
		\v 	Vertical Tabulator

The 6 escape characters above were originally designed to control typewriters, teletypes, and fax machines. They do not make any sense in HTML. 
===================================================================================================================================================================================

		Breaking Long Code Lines

		For best readability, programmers often like to avoid code lines longer than 80 characters.

		If a JavaScript statement does not fit on one line, the best place to break it is after an operator:
		Example
		document.getElementById("demo").innerHTML =
		"Hello Dolly!";

		You can also break up a code line within a text string with a single backslash:
		Example
		document.getElementById("demo").innerHTML = "Hello \
		Dolly!";



		The \ method is not the preferred method. It might not have universal support.
		Some browsers do not allow spaces behind the \ character.

		A safer way to break up a string, is to use string addition:
		Example
		document.getElementById("demo").innerHTML = "Hello " +
		"Dolly!";

		You cannot break up a code line with a backslash:
		Example
		document.getElementById("demo").innerHTML = \                                                      <------this will not work
		"Hello Dolly!";


=====================================================================================================================================================================================



		Do not create Strings objects.

		The new keyword complicates the code and slows down execution speed.

		String objects can produce unexpected results:


=====================================================================================================================================================================================








